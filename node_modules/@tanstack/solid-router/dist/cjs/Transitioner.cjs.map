{"version":3,"file":"Transitioner.cjs","sources":["../../src/Transitioner.tsx"],"sourcesContent":["import * as Solid from 'solid-js'\nimport {\n  getLocationChangeInfo,\n  handleHashScroll,\n  trimPathRight,\n} from '@tanstack/router-core'\nimport { useRouter } from './useRouter'\nimport { useRouterState } from './useRouterState'\nimport { usePrevious } from './utils'\n\nexport function Transitioner() {\n  const router = useRouter()\n  let mountLoadForRouter = { router, mounted: false }\n  const isLoading = useRouterState({\n    select: ({ isLoading }) => isLoading,\n  })\n\n  const [isTransitioning, setIsTransitioning] = Solid.createSignal(false)\n  // Track pending state changes\n  const hasPendingMatches = useRouterState({\n    select: (s) => s.matches.some((d) => d.status === 'pending'),\n  })\n\n  const previousIsLoading = usePrevious(isLoading)\n\n  const isAnyPending = () =>\n    isLoading() || isTransitioning() || hasPendingMatches()\n  const previousIsAnyPending = usePrevious(isAnyPending)\n\n  const isPagePending = () => isLoading() || hasPendingMatches()\n  const previousIsPagePending = usePrevious(isPagePending)\n\n  if (!router.isServer) {\n    router.startTransition = async (fn: () => void | Promise<void>) => {\n      setIsTransitioning(true)\n      await fn()\n      setIsTransitioning(false)\n    }\n  }\n\n  // Subscribe to location changes\n  // and try to load the new location\n  Solid.onMount(() => {\n    const unsub = router.history.subscribe(router.load)\n\n    const nextLocation = router.buildLocation({\n      to: router.latestLocation.pathname,\n      search: true,\n      params: true,\n      hash: true,\n      state: true,\n      _includeValidateSearch: true,\n    })\n\n    if (\n      trimPathRight(router.latestLocation.href) !==\n      trimPathRight(nextLocation.href)\n    ) {\n      router.commitLocation({ ...nextLocation, replace: true })\n    }\n\n    Solid.onCleanup(() => {\n      unsub()\n    })\n  })\n\n  // Try to load the initial location\n  Solid.createRenderEffect(() => {\n    Solid.untrack(() => {\n      if (\n        (typeof window !== 'undefined' && router.clientSsr) ||\n        (mountLoadForRouter.router === router && mountLoadForRouter.mounted)\n      ) {\n        return\n      }\n      mountLoadForRouter = { router, mounted: true }\n      const tryLoad = async () => {\n        try {\n          await router.load()\n        } catch (err) {\n          console.error(err)\n        }\n      }\n      tryLoad()\n    })\n  })\n\n  Solid.createRenderEffect(\n    Solid.on(\n      [previousIsLoading, isLoading],\n      ([previousIsLoading, isLoading]) => {\n        if (previousIsLoading.previous && !isLoading) {\n          router.emit({\n            type: 'onLoad',\n            ...getLocationChangeInfo(router.state),\n          })\n        }\n      },\n    ),\n  )\n  Solid.createRenderEffect(\n    Solid.on(\n      [isPagePending, previousIsPagePending],\n      ([isPagePending, previousIsPagePending]) => {\n        // emit onBeforeRouteMount\n        if (previousIsPagePending.previous && !isPagePending) {\n          router.emit({\n            type: 'onBeforeRouteMount',\n            ...getLocationChangeInfo(router.state),\n          })\n        }\n      },\n    ),\n  )\n\n  Solid.createRenderEffect(\n    Solid.on(\n      [isAnyPending, previousIsAnyPending],\n      ([isAnyPending, previousIsAnyPending]) => {\n        // The router was pending and now it's not\n        if (previousIsAnyPending.previous && !isAnyPending) {\n          router.emit({\n            type: 'onResolved',\n            ...getLocationChangeInfo(router.state),\n          })\n\n          router.__store.setState((s) => ({\n            ...s,\n            status: 'idle',\n            resolvedLocation: s.location,\n          }))\n\n          handleHashScroll(router)\n        }\n      },\n    ),\n  )\n\n  return null\n}\n"],"names":["Transitioner","router","useRouter","mountLoadForRouter","mounted","isLoading","useRouterState","select","isTransitioning","setIsTransitioning","Solid","createSignal","hasPendingMatches","s","matches","some","d","status","previousIsLoading","usePrevious","isAnyPending","previousIsAnyPending","isPagePending","previousIsPagePending","isServer","startTransition","fn","onMount","unsub","history","subscribe","load","nextLocation","buildLocation","to","latestLocation","pathname","search","params","hash","state","_includeValidateSearch","trimPathRight","href","commitLocation","replace","onCleanup","createRenderEffect","untrack","window","clientSsr","tryLoad","err","console","error","on","previous","emit","type","getLocationChangeInfo","__store","setState","resolvedLocation","location","handleHashScroll"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAUO,SAASA,eAAe;AAC7B,QAAMC,SAASC,UAAAA,UAAU;AACzB,MAAIC,qBAAqB;AAAA,IAAEF;AAAAA,IAAQG,SAAS;AAAA,EAAM;AAClD,QAAMC,YAAYC,eAAAA,eAAe;AAAA,IAC/BC,QAAQA,CAAC;AAAA,MAAEF,WAAAA;AAAAA,IAAAA,MAAgBA;AAAAA,EAAAA,CAC5B;AAED,QAAM,CAACG,iBAAiBC,kBAAkB,IAAIC,iBAAMC,aAAa,KAAK;AAEtE,QAAMC,oBAAoBN,eAAAA,eAAe;AAAA,IACvCC,QAASM,OAAMA,EAAEC,QAAQC,KAAMC,CAAMA,MAAAA,EAAEC,WAAW,SAAS;AAAA,EAAA,CAC5D;AAEKC,QAAAA,oBAAoBC,kBAAYd,SAAS;AAE/C,QAAMe,eAAeA,MACnBf,UAAeG,KAAAA,gBAAAA,KAAqBI,kBAAkB;AAClDS,QAAAA,uBAAuBF,kBAAYC,YAAY;AAErD,QAAME,gBAAgBA,MAAMjB,UAAU,KAAKO,kBAAkB;AACvDW,QAAAA,wBAAwBJ,kBAAYG,aAAa;AAEnD,MAAA,CAACrB,OAAOuB,UAAU;AACbC,WAAAA,kBAAkB,OAAOC,OAAmC;AACjEjB,yBAAmB,IAAI;AACvB,YAAMiB,GAAG;AACTjB,yBAAmB,KAAK;AAAA,IAC1B;AAAA,EAAA;AAKFC,mBAAMiB,QAAQ,MAAM;AAClB,UAAMC,QAAQ3B,OAAO4B,QAAQC,UAAU7B,OAAO8B,IAAI;AAE5CC,UAAAA,eAAe/B,OAAOgC,cAAc;AAAA,MACxCC,IAAIjC,OAAOkC,eAAeC;AAAAA,MAC1BC,QAAQ;AAAA,MACRC,QAAQ;AAAA,MACRC,MAAM;AAAA,MACNC,OAAO;AAAA,MACPC,wBAAwB;AAAA,IAAA,CACzB;AAGCC,QAAAA,WAAAA,cAAczC,OAAOkC,eAAeQ,IAAI,MACxCD,yBAAcV,aAAaW,IAAI,GAC/B;AACA1C,aAAO2C,eAAe;AAAA,QAAE,GAAGZ;AAAAA,QAAca,SAAS;AAAA,MAAA,CAAM;AAAA,IAAA;AAG1DnC,qBAAMoC,UAAU,MAAM;AACd,YAAA;AAAA,IAAA,CACP;AAAA,EAAA,CACF;AAGDpC,mBAAMqC,mBAAmB,MAAM;AAC7BrC,qBAAMsC,QAAQ,MAAM;AAEf,UAAA,OAAOC,WAAW,eAAehD,OAAOiD,aACxC/C,mBAAmBF,WAAWA,UAAUE,mBAAmBC,SAC5D;AACA;AAAA,MAAA;AAEmB,2BAAA;AAAA,QAAEH;AAAAA,QAAQG,SAAS;AAAA,MAAK;AAC7C,YAAM+C,UAAU,YAAY;AACtB,YAAA;AACF,gBAAMlD,OAAO8B,KAAK;AAAA,iBACXqB,KAAK;AACZC,kBAAQC,MAAMF,GAAG;AAAA,QAAA;AAAA,MAErB;AACQ,cAAA;AAAA,IAAA,CACT;AAAA,EAAA,CACF;AAEKL,mBAAAA,mBACJrC,iBAAM6C,GACJ,CAACrC,mBAAmBb,SAAS,GAC7B,CAAC,CAACa,oBAAmBb,UAAS,MAAM;AAC9Ba,QAAAA,mBAAkBsC,YAAY,CAACnD,YAAW;AAC5CJ,aAAOwD,KAAK;AAAA,QACVC,MAAM;AAAA,QACN,GAAGC,WAAAA,sBAAsB1D,OAAOuC,KAAK;AAAA,MAAA,CACtC;AAAA,IAAA;AAAA,EACH,CAEJ,CACF;AACMO,mBAAAA,mBACJrC,iBAAM6C,GACJ,CAACjC,eAAeC,qBAAqB,GACrC,CAAC,CAACD,gBAAeC,sBAAqB,MAAM;AAEtCA,QAAAA,uBAAsBiC,YAAY,CAAClC,gBAAe;AACpDrB,aAAOwD,KAAK;AAAA,QACVC,MAAM;AAAA,QACN,GAAGC,WAAAA,sBAAsB1D,OAAOuC,KAAK;AAAA,MAAA,CACtC;AAAA,IAAA;AAAA,EACH,CAEJ,CACF;AAEMO,mBAAAA,mBACJrC,iBAAM6C,GACJ,CAACnC,cAAcC,oBAAoB,GACnC,CAAC,CAACD,eAAcC,qBAAoB,MAAM;AAEpCA,QAAAA,sBAAqBmC,YAAY,CAACpC,eAAc;AAClDnB,aAAOwD,KAAK;AAAA,QACVC,MAAM;AAAA,QACN,GAAGC,WAAAA,sBAAsB1D,OAAOuC,KAAK;AAAA,MAAA,CACtC;AAEMoB,aAAAA,QAAQC,SAAUhD,CAAO,OAAA;AAAA,QAC9B,GAAGA;AAAAA,QACHI,QAAQ;AAAA,QACR6C,kBAAkBjD,EAAEkD;AAAAA,MAAAA,EACpB;AAEFC,iBAAAA,iBAAiB/D,MAAM;AAAA,IAAA;AAAA,EACzB,CAEJ,CACF;AAEO,SAAA;AACT;;"}