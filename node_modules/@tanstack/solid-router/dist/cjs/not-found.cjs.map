{"version":3,"file":"not-found.cjs","sources":["../../src/not-found.tsx"],"sourcesContent":["import { isNotFound } from '@tanstack/router-core'\nimport { CatchBoundary } from './CatchBoundary'\nimport { useRouterState } from './useRouterState'\nimport type * as Solid from 'solid-js'\nimport type { NotFoundError } from '@tanstack/router-core'\n\nexport function CatchNotFound(props: {\n  fallback?: (error: NotFoundError) => Solid.JSX.Element\n  onCatch?: (error: Error) => void\n  children: Solid.JSX.Element\n}) {\n  // TODO: Some way for the user to programmatically reset the not-found boundary?\n  const resetKey = useRouterState({\n    select: (s) => `not-found-${s.location.pathname}-${s.status}`,\n  })\n\n  return (\n    <CatchBoundary\n      getResetKey={() => resetKey()}\n      onCatch={(error) => {\n        if (isNotFound(error)) {\n          props.onCatch?.(error)\n        } else {\n          throw error\n        }\n      }}\n      errorComponent={({ error }: { error: Error }) => {\n        if (isNotFound(error)) {\n          return props.fallback?.(error)\n        } else {\n          throw error\n        }\n      }}\n    >\n      {props.children}\n    </CatchBoundary>\n  )\n}\n\nexport function DefaultGlobalNotFound() {\n  return <p>Not Found</p>\n}\n"],"names":["CatchNotFound","props","resetKey","useRouterState","select","s","location","pathname","status","_$createComponent","CatchBoundary","getResetKey","onCatch","error","isNotFound","errorComponent","fallback","children","DefaultGlobalNotFound","_tmpl$"],"mappings":";;;;;;;AAMO,SAASA,cAAcC,OAI3B;AAED,QAAMC,WAAWC,eAAAA,eAAe;AAAA,IAC9BC,QAASC,OAAM,aAAaA,EAAEC,SAASC,QAAQ,IAAIF,EAAEG,MAAM;AAAA,EAAA,CAC5D;AAED,SAAAC,MAAAA,gBACGC,cAAAA,eAAa;AAAA,IACZC,aAAaA,MAAMT,SAAS;AAAA,IAC5BU,SAAUC,CAAU,UAAA;;AACdC,UAAAA,WAAAA,WAAWD,KAAK,GAAG;AACrBZ,oBAAMW,YAANX,+BAAgBY;AAAAA,MAAK,OAChB;AACCA,cAAAA;AAAAA,MAAAA;AAAAA,IAEV;AAAA,IACAE,gBAAgBA,CAAC;AAAA,MAAEF;AAAAA,IAAAA,MAA8B;;AAC3CC,UAAAA,WAAAA,WAAWD,KAAK,GAAG;AACdZ,gBAAAA,WAAMe,aAANf,+BAAiBY;AAAAA,MAAK,OACxB;AACCA,cAAAA;AAAAA,MAAAA;AAAAA,IAEV;AAAA,IAAC,IAAAI,WAAA;AAAA,aAEAhB,MAAMgB;AAAAA,IAAAA;AAAAA,EAAQ,CAAA;AAGrB;AAEO,SAASC,wBAAwB;AACtC,SAAAC,OAAA;AACF;;;"}