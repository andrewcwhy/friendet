import { hydrate } from '@tanstack/router-core/ssr/client';
import { Await } from '../awaited';
import { HeadContent } from '../HeadContent';
import { RouterProvider } from '../RouterProvider';
let hydrationPromise;
const Dummy = (props) => <>{props.children}</>;
export function RouterClient(props) {
    if (!hydrationPromise) {
        if (!props.router.state.matches.length) {
            hydrationPromise = hydrate(props.router);
        }
        else {
            hydrationPromise = Promise.resolve();
        }
    }
    return (<Await promise={hydrationPromise} children={() => (<Dummy>
          <Dummy>
            <RouterProvider router={props.router} InnerWrap={(props) => (<Dummy>
                  <Dummy>
                    <HeadContent />
                    {props.children}
                  </Dummy>
                  <Dummy />
                </Dummy>)}/>
          </Dummy>
        </Dummy>)}/>);
}
//# sourceMappingURL=RouterClient.jsx.map