import { createComponent, memo } from "solid-js/web";
import { hydrate } from "@tanstack/router-core/ssr/client";
import { Await } from "../awaited.js";
import { HeadContent } from "../HeadContent.js";
import { RouterProvider } from "../RouterProvider.js";
let hydrationPromise;
const Dummy = (props) => memo(() => props.children);
function RouterClient(props) {
  if (!hydrationPromise) {
    if (!props.router.state.matches.length) {
      hydrationPromise = hydrate(props.router);
    } else {
      hydrationPromise = Promise.resolve();
    }
  }
  return createComponent(Await, {
    promise: hydrationPromise,
    children: () => createComponent(Dummy, {
      get children() {
        return createComponent(Dummy, {
          get children() {
            return createComponent(RouterProvider, {
              get router() {
                return props.router;
              },
              InnerWrap: (props2) => createComponent(Dummy, {
                get children() {
                  return [createComponent(Dummy, {
                    get children() {
                      return [createComponent(HeadContent, {}), memo(() => props2.children)];
                    }
                  }), createComponent(Dummy, {})];
                }
              })
            });
          }
        });
      }
    })
  });
}
export {
  RouterClient
};
//# sourceMappingURL=RouterClient.js.map
